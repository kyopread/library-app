plugins {
    id 'org.springframework.boot' version '2.6.8'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.jetbrains.kotlin.plugin.allopen" version "1.6.21"
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'

    id 'org.jetbrains.kotlin.plugin.jpa' version '1.6.21'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.6.21'
    id 'org.jetbrains.kotlin.kapt' version '1.6.21'

    id "org.sonarqube" version "3.4.0.2513"
//    id "jacoco"
}

group = 'com.group'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.6.21'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.3'
    implementation 'com.querydsl:querydsl-jpa-codegen:5.0.0'
    kapt("com.querydsl:querydsl-apt:5.0.0:jpa")
    kapt("org.springframework.boot:spring-boot-configuration-processor")

    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
}

// jacoco의 기본설정은 html 만 생성하게 되어있으나 xml 추가를 위한 설정
/*jacocoTestReport {
    dependsOn tasks.test
    reports {
        xml.enabled(true)
        html.enabled(true)
        xml.destination(new File("build/reports/jacoco.xml"))
    }
}*/

/*sonarqube {
    properties {
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.login", "sqp_6a0bbbf83b5097e6844cd27ebab411f3ce7e932b"
        property "sonar.projectKey", "library-app"

        // optional
        property "sonar.sourceEncoding", "UTF-8"
    }
}*/

// sonarqube task 수행시 clean, jacocoTestReport 를 우선 실행하기 위한 설정
//tasks["sonarqube"].dependsOn(clean, jacocoTestReport)